name: Build & Deploy PlsPostProcessor

on:
  push:
    branches: [ main, test, dev ]
  pull_request:
    branches: [ main, test, dev ]

env:
  DOTNET_VERSION: '4.8.x'
  SOLUTION_FILE_PATH: ./"PLS Post Processor.sln"
  PROJECT_FILE_PATH: ./"PLS Post Processor"/"PLS Post Processor.csproj"
  BUILD_CONFIGURATION: Release
  OUTPUT_PATH: C:/Publish/PLSPostProcessor

  #  OUTPUT_PATH: ${{ github.workspace }}\publishoutput
  # C:/"Publish/PLSPostProcessor"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1

    - name: Restore NuGet Packages
      run: nuget restore "PLS Post Processor.sln"

    - name: Build Solution
      run: |
        msbuild "PLS Post Processor.sln" /p:Configuration=Release /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ env.OUTPUT_PATH }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: published-files
        path: ${{ env.OUTPUT_PATH }}

    # - name: Create Release
    #   uses: softprops/action-gh-release@v2
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: ${{ env.OUTPUT_PATH }}\**\*

    - name: View Environment
      run: |
        echo "DOTNET_VERSION = ${{ env.DOTNET_VERSION }}"
        echo "SOLUTION_FILE_PATH = ${{ env.SOLUTION_FILE_PATH }}"
        echo "PROJECT_FILE_PATH = ${{ env.PROJECT_FILE_PATH }}"
        echo "BUILD_CONFIGURATION = ${{ env.BUILD_CONFIGURATION }}"
        echo "OUTPUT_PATH = ${{ env.OUTPUT_PATH}}"

    - name: View Local Files
      shell: pwsh
      run: ls

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: List local Files
        shell: pwsh
        run: ls

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: published-files
          path: ${{ env.OUTPUT_PATH }}

      - name: Deploy based on branch
        shell: pwsh
        run: |
          $branch = "${{ github.ref }}"
          $deployPath = ""

          if ($branch -eq "refs/heads/main") {
            $deployPath = "C:\Deployments\Production"
          } elseif ($branch -eq "refs/heads/test") {
            $deployPath = "C:\Deployments\Test"
          } elseif ($branch -eq "refs/heads/dev") {
            $deployPath = "C:\Deployments\Development"
          }

          echo "deployPath = $deployPath"

          if ($deployPath -ne "") {
            try {
              # Create directory if it doesn't exist
              if (!(Test-Path $deployPath)) {
                New-Item -ItemType Directory -Path $deployPath -Force
              }

              # Copy published files - only copies within the virtual machine
              Copy-Item -Path ${{ env.OUTPUT_PATH }}\* -Destination $deployPath -Recurse -Force

              Write-Host "Deployed to: $deployPath"
            } catch {
              Write-Error "Deployment failed: $_"
            }
          }